public static List<String> topKFrequent(String[] words, int k) {
      Map<String, Integer> map = new LinkedHashMap<>();
      for(int i = 0;i<words.length;i++){
          if(map.containsKey(words[i])){
              Integer val = map.get(words[i]);
              map.put(words[i], ++val);
          }
          else{
              map.put(words[i],1);
          }
      }
        
      Set<String> [] arr = new TreeSet[words.length+1];
      for(Map.Entry<String, Integer> m  : map.entrySet()){
          if(arr[m.getValue()]==null){
              arr[m.getValue()] = new TreeSet<String>();
          }
          arr[m.getValue()].add(m.getKey());
      }  
     List<String> result = new LinkedList<String>(); 
     for(int i = arr.length-1; i>=0;--i){
       if(arr[i]!=null){
         result.addAll(arr[i]);  
       }  
       if(result.size()==k) break;  
       while(result.size()>k){
          result.remove(result.size()-1); 
       }  
     }
     return result;  
    }     